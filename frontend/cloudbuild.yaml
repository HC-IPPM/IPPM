steps:
  # Step 1: Generate the Docker image name and save it to a workspace file
  - name: 'gcr.io/cloud-builders/docker'
    id: generate-image-name
    entrypoint: 'bash'
    dir: frontend
    args:
      - '-c'
      - |
        echo "northamerica-northeast1-docker.pkg.dev/php-01j2hnp8fyq/ippm-pigp-repository/ui:$BRANCH_NAME-$SHORT_SHA-$(date +%s)" > /workspace/imagename

  # Step 2: Build the Docker image if the branch is 'main'
  - name: 'gcr.io/cloud-builders/docker'
    id: build-if-main
    entrypoint: 'bash'
    dir: frontend
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" ]]; then
          image=$(cat /workspace/imagename)
          docker build -t $image -f ./Dockerfile .
        else
          exit 0
        fi

  # Step 3: Push the Docker image to the registry if the branch is 'main'
  - name: 'gcr.io/cloud-builders/docker'
    id: push-if-main
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" ]]; then
          image=$(cat /workspace/imagename)
          docker push $image
        else
          exit 0
        fi

  # Step 4: Deploy to Cloud Run if the branch is 'main'
  - name: 'gcr.io/cloud-builders/gcloud'
    id: deploy-if-main
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" ]]; then
          image=$(cat /workspace/imagename)
          gcloud run deploy ippm-pigp-service \
            --image $image \
            --platform managed \
            --region northamerica-northeast1 \
            --allow-unauthenticated \
            --port 3000
        else
          exit 0
        fi

  # Step 5: Map Custom Domain if the branch is 'main'
  - name: 'gcr.io/cloud-builders/gcloud'
    id: map-domain
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" ]]; then
          existing_mapping=$(gcloud beta run domain-mappings list --filter="domain:ippm-pigp.alpha.phac-aspc.gc.ca" --region northamerica-northeast1 --format="value(domain)")
          if [[ -z "$existing_mapping" ]]; then
            gcloud beta run domain-mappings create --service=ippm-pigp-service --domain=ippm-pigp.alpha.phac-aspc.gc.ca --region=northamerica-northeast1
          else
            echo "Domain mapping already exists."
          fi
        else
          exit 0
        fi

  # Step 6: Enable Managed SSL if the branch is 'main'
  - name: 'gcr.io/cloud-builders/gcloud'
    id: enable-ssl
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" ]]; then
          gcloud beta run domain-mappings update --domain=ippm-pigp.alpha.phac-aspc.gc.ca --certificate-management=automatic --region=northamerica-northeast1
        else
          exit 0
        fi

options:
  logging: CLOUD_LOGGING_ONLY
